<Application x:Class="EducationalMedicalSystem.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:EducationalMedicalSystem.UI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="DefaultWinwodStyle" TargetType="{x:Type Window}">
            <Setter Property="Title" Value="АНАТОМИЯ+"></Setter>
            <Setter Property="Width" Value="1160"></Setter>
            <Setter Property="Height" Value="720"></Setter>
            <Setter Property="WindowStyle" Value="None"></Setter>
            <Setter Property="ResizeMode" Value="NoResize"></Setter>
            <Setter Property="Icon" Value="/Icons/icon.ico"></Setter>
        </Style>


        <Style x:Key="DefaultButtonStyle" TargetType="Button">
            <Setter Property="TextElement.FontFamily" Value="Fonts/#Circe Rounded Alt Extra Bold"/>
            <Setter Property="Foreground" Value="#FF1C82AA"></Setter>
            <Setter Property="FontSize" Value="48"></Setter>

            <Setter Property="Width" Value="500"></Setter>

            <Setter Property="MinHeight" Value="75"></Setter>
            <Setter Property="MaxHeight" Value="200"></Setter>

            <Setter Property="Margin" Value="15"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>

            <Setter Property="Background" Value="#FFDEEFF1"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="Border"
                            CornerRadius="7"
                            BorderThickness="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#FF0E83B4">
                            <ContentPresenter 
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF1C82AA" />
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF1C82AA" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FFC3EAF9" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FFC4E5F6" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF027AAC" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Buttons/block.png" Stretch="UniformToFill"></ImageBrush>
                                    </Setter.Value>
                                </Setter>

                                <!--<Setter TargetName="Border" Property="Background" Value="#FFDEEFF1" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#660E83B4" />
                                    <Setter Property="Foreground" Value="#661C82AA"/> -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultExtraButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Buttons/block.png" Stretch="UniformToFill"></ImageBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="Border"
                            CornerRadius="7"
                            BorderThickness="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#FF0E83B4">
                            <ContentPresenter 
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="CloseImageStyle">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Width" Value="45"></Setter>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Stretch" Value="Fill"></Setter>
            <Setter Property="Source" Value="/Buttons/close.png"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver,ElementName=CloseBtn}" Value="True">
                    <Setter Property="Source" Value="/Buttons/closeL.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="BackImageStyle">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Width" Value="45"></Setter>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Stretch" Value="Fill"></Setter>
            <Setter Property="Source" Value="/Buttons/back.png"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver,ElementName=BackBtn}" Value="True">
                    <Setter Property="Source" Value="/Buttons/backL.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="QuestionImageStyle">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Width" Value="45"></Setter>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Stretch" Value="Fill"></Setter>
            <Setter Property="Source" Value="/Buttons/question.png"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver,ElementName=QuestionBtn}" Value="True">
                    <Setter Property="Source" Value="/Buttons/questionL.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="ScaledImageStyle">
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Height" Value="80"></Setter>
            <Setter Property="Stretch" Value="Fill"></Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Image.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="80" Duration="0:0:0.1" Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="80" Duration="0:0:0.1" Storyboard.TargetProperty="Height"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Image.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="110" Duration="0:0:0.1" Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="110" Duration="0:0:0.1" Storyboard.TargetProperty="Height"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="Foreground" Value="#FF1C82AA"></Setter>
            <Setter Property="Background" Value="#FFDEEFF1"></Setter>
            <Setter Property="FontFamily" Value="Fonts/#Circe Rounded Alt Extra Bold"></Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
            <Setter Property="FontSize" Value="36"></Setter>
            <Setter Property="MinWidth" Value="300"></Setter>
            <Setter Property="MaxWidth" Value="300"></Setter>
            <Setter Property="Foreground" Value="#FF1C82AA"></Setter>
            <Setter Property="Background" Value="#FFDEEFF1"></Setter>
            <Setter Property="BorderBrush" Value="#FF1C82AA"></Setter>
            <Setter Property="FontFamily" Value="Fonts/#Circe Rounded Alt Extra Bold"></Setter>
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                                CornerRadius="7"
                                BorderThickness="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          Padding="10 0 0 0"
                                          IsTabStop="False"
                                          Background="{x:Null}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFDEEFF1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFDEEFF1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonStyle">
            <Setter Property="FontSize" Value="36"></Setter>
            <Setter Property="Foreground" Value="#FF1C82AA"></Setter>
            <Setter Property="FontFamily" Value="Fonts/#Circe Rounded Alt Extra Bold"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="25" Width="25">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="#FF1C82AA" BorderThickness="2" CornerRadius="20" />
                                    <Border Name="RadioMark" Background="#FF1C82AA" Margin="4" Visibility="Hidden" CornerRadius="20"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <TextBlock Style="{StaticResource TextBlockStyle}" Margin="10,0,0,0">
                                <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FF166381" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxStyle">
            <Setter Property="FontSize" Value="36"></Setter>
            <Setter Property="Foreground" Value="#FF1C82AA"></Setter>
            <Setter Property="FontFamily" Value="Fonts/#Circe Rounded Alt Extra Bold"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="25" Width="25">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="#FF1C82AA" BorderThickness="2" CornerRadius="2" />
                                    <Border Name="RadioMark" Background="#FF1C82AA" Margin="4" Visibility="Hidden" CornerRadius="2"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <TextBlock Style="{StaticResource TextBlockStyle}" Margin="10,0,0,0">
                                <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FF166381" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
